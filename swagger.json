{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "version": "1.0.0",
    "description": "API for managing a library system."
  },
  "paths": {
    "/books": {
      "get": {
        "summary": "Get all books",
        "operationId": "getAllBooks",
        "responses": {
          "200": {
            "description": "A list of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                },
                "examples": {
                  "example1": {
                    "summary": "A sample book list",
                    "value": [
                      {
                        "id": "1",
                        "title": "1984",
                        "author": "George Orwell"
                      },
                      {
                        "id": "2",
                        "title": "To Kill a Mockingbird",
                        "author": "Harper Lee"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "summary": "Get a specific book",
        "operationId": "getBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "The ID of the book to retrieve",
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of a book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                },
                "examples": {
                  "example1": {
                    "summary": "A sample book",
                    "value": {
                      "id": "1",
                      "title": "1984",
                      "author": "George Orwell"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "examples": {
                  "example1": {
                    "summary": "Book not found error",
                    "value": {
                      "error": "Book not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "post": {
        "summary": "Add a new book",
        "operationId": "addBook",
        "requestBody": {
          "description": "Book to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              },
              "examples": {
                "example1": {
                  "summary": "A sample book to add",
                  "value": {
                    "id": "3",
                    "title": "The Catcher in the Rye",
                    "author": "J.D. Salinger"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book added successfully",
            "content": {
              "application/json": {
                "examples": {
                  "example1": {
                    "summary": "Success response",
                    "value": {
                      "message": "Book added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "examples": {
                  "example1": {
                    "summary": "Validation error",
                    "value": {
                      "error": "Invalid input data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "required": ["id", "title", "author"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the book"
          },
          "title": {
            "type": "string",
            "description": "Title of the book"
          },
          "author": {
            "type": "string",
            "description": "Author of the book"
          }
        }
      }
    }
  }
}
